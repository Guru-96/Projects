pipeline {
    agent any
    tools {
         jdk "jdk17"
         maven "maven3"
        }
     environment {
        SCANNER_HOME =tool 'sonar-scanner'
        }
        stages {
        stage('clean Workspace'){
            steps{
                cleanWs()
            }
        }
        stage('checkout'){
            steps{
               git 'https://github.com/Aj7Ay/jpetstore-6.git'
            }
        }
        stage('compile'){
            steps{
                sh 'mvn clean compile'
            }
        }
        stage('test'){
            steps{
                sh 'mvn test'
            }
        }
        stage('sonarqube analysis'){
            steps{
                withSonarQubeEnv('sonar-server'){
                    sh '''$ SCANNER_HOME/bin/sonar-scanner -Dsonar.projectname=myshop \
                          -Dsonar.java.binaries =. \
                          -Dsonar.projectKey =myshop'''
                }
            }
        }
        stage('quality gate'){
            steps{
                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }
        stage('build'){
            steps{
                sh 'mvn package'
            }
        }
        stage('OWASP Dependency check'){
            steps{
                dependencyCheck additionalArguments: '--scan./--format XML', odcInstallation: 'Dp-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
    }
}
